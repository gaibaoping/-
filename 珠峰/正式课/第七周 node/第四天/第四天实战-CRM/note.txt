一些管理系统们
CRM：客户管理系统，主要包含了客户信息的增删改查以及其他功能，例如：客户的回访记录、系统权限的管理等

OA：日常办公管理系统

ERP：企业战略资源管理系统，包含了CRM、财务、行政、绩效等系统，每一个子系统之前还是有关联的...，还会有总结性的报表统计（highCharts、ECharts、d3.js、svg.js...）

CMS:网站后台内容管理/发布系统

真是项目的开发流程：
    几个职位：产品、UI设计师（美工）、前端、后台、测试、运维、运营

    产品定功能需求和板块等
    -> UI负责把原型图设计的精美（效果图PSD->PhotoShop）
    -> 前端：拿到效果图开始切图+搭建HTML+CSS布局结构（一定要100%还原效果图）；完成一些JS操作效果，例如实现轮播图选项卡等；
    -> 后台：根据产品的需求文档开始实现对应的功能，并且编写接口文档（API接口规范文档）
        API接口规范文档：提供了客户端请求的URL地址，请求的方式、传递内容的格式以及返回内容格式等所有的前后端交互的规
        我们目前的大部分项目，都是前后端完全分离的。所谓的完全分离，就是后台开发人员提供一个详细的API接口文档，后台开发人员按照文档中的规范去实现对应的功能，而客户端开发人员按照规范中的内容去请求数据和解析数据即可，前端不需要管后台是用什么语言实现，也不管是怎么实现的，只需要按照接口文档中的规范调取即可
    -> 前端：通过AJAX等技术，结合API文档，从服务器端获取数据。然后在页面上做数据处理和数据绑定（字符串拼接、模板引擎...）

    开发完成后提交给测试，测试测出BUG后然后开发再改，然后再测，然后再改...最后产品上线（运维来做，小型公司或者小团队都是后台充当运维）

    1、前后端交互处理的时候，最终的结果没有出来，该如何去调试？
        打开控制台，看当前的AJAX请求是否发送了，发送给服务器的数据是否正确（检查请求阶段）
        如果请求正常的话，看一下服务器响应回来的内容是否正常（检查响应阶段）
        如果服务器返回的数据也是正确的，那么就和后台没关系了，我们继续检查，得到数据后的绑定操作是否正确（检查逻辑）


三种提示框
    window.alert();     普通的弹出框
    window.confirm();    有确认和取消的提示框  执行这个方法会有一个返回值，返回值为true代表点击的是确定，返回值为false代表点击是取消
    window.prompt();     有输入框的提示框
